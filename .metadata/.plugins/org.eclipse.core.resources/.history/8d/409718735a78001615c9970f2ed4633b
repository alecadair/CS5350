/*
 * id3.cpp
 *
 *  Created on: Sep 10, 2016
 *      Author: adair
 */
#include <stdio.h>
#include <iostream>
#include <stdlib.h>
#include <vector>
#include <fstream>
#include <iostream>
#include <sstream>
#include <string>


using namespace std;
class TreeNode{
	vector<TreeNode*> children;
	//represents the vecor position of the attribute to be checked.
	int attribute;
};


TreeNode* InduceTree(vector<vector<string> > dataTable){
	//base case check for same labels
	bool sameLabels = true;
	string label = dataTable.at(0).at(dataTable.at(0).size() -1);
	for(int i = 0; i < dataTable.size();i++){
		vector<string> row = dataTable.at(i);
		string labelCheck = row.at(row.size() -1);
		//string labelCheck = dataTable.at(i).at(dataTable.at(i).size() -1 );
		if(label.compare(labelCheck) != 0){
			sameLabels = false;
		}
	}
	TreeNode* rootNode = new TreeNode;
	return rootNode;
}

vector<vector<string> > parseAndConstruct(){
	vector<vector<string> > dataTable;
	//vector<string> data;
	string line;
	//stringstream iss;
	//string token;
	ifstream infile( "./datasets/SettingA/training.data");
	if(infile.is_open()){
		while(getline(infile,line)){
			stringstream iss;
			iss << line;
			vector<string> data;
			string token;
			while(getline(iss,token, ',')){
			//while(iss << line){
				data.push_back(token);
			}
			iss.clear();
			dataTable.push_back(data);
		}
	}
	return dataTable;
}
int main(int argc, char*argv[]){
	vector<vector<string> > attributes;
	attributes = parseAndConstruct();
	TreeNode* rootNode = InduceTree(attributes);

	return 0;
}
